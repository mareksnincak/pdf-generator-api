name: CI/CD
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: main
jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: npm audit
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run test
  test-it:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run test:it
  deploy:
    # TODO use OIDC provider https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || endsWith(github.event.head_commit.message, '[deploy]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,arm'
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'
      - run: npm run deploy:prod
        env:
          REQUIRE_APPROVAL: never
          ENVIRONMENT_NAME: ${{ secrets.ENVIRONMENT_NAME }}
      - uses: actions/upload-artifact@v4
        with:
          name: cdk-output
          path: ./infra/cdk/cdk.output.json
  test-e2e:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || endsWith(github.event.head_commit.message, '[deploy]') }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - uses: actions/download-artifact@v4
        with:
          name: cdk-output
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'
      - run: |
          E2E_BASE_URL=$(jq -r '.[].apiUrl' ./cdk.output.json) \
          E2E_AUTH_USER_POOL_ID=$(jq -r '.[].userPoolId' ./cdk.output.json) \
          E2E_AUTH_USER_POOL_CLIENT_ID=$(jq -r '.[].userPoolClientId' ./cdk.output.json) \
          E2E_AUTH_USER_CREDENTIALS_SECRET_NAME=$(jq -r '.[].defaultUserCredentialsSecretName' ./cdk.output.json) \
          npm run test:e2e
